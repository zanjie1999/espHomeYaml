esphome:
  name: doorbell
  on_boot:
    priority: 800
    then:
      - output.turn_off: toen_out
      - while:
          condition:
            not:
              wifi.connected:
          then:
            - output.turn_on: led_out
            - delay: 0.2s
            - output.turn_off: led_out
            - delay: 0.2s
      - output.turn_off: led_out
      - component.update: bat_voltage
      - if:
          condition:
            binary_sensor.is_on: io0
          then:
            - delay: 1s
            - output.turn_on: toen_out
            - deep_sleep.enter: deep_sleep_1
            # - delay: 1s
            # - output.turn_off: toen_out

  on_shutdown:
    priority: -100
    then:
      - output.turn_on: toen_out

esp8266:
  board: esp01_1m

deep_sleep:
  id: deep_sleep_1

output:
  - platform: gpio
    pin:
      number: GPIO14
      mode: OUTPUT
      inverted: false
    id: toen_out
  - platform: gpio
    pin:
      number: GPIO2
      mode: OUTPUT
      inverted: false
    id: led_out

# switch:
#   - platform: gpio
#     pin: 14
#     id: toen
#     inverted: yes
#     restore_mode: ALWAYS_ON
#  - platform: gpio
#    pin: 2
#    id: led
#    inverted: yes
#    restore_mode: ALWAYS_ON

binary_sensor:
  - platform: gpio
    pin: 
      number: GPIO0
      mode:
        input: true
        pullup: true
    name: "MeButton"
    id: io0
    internal: true

wifi:
  fast_connect: true
  ssid: "wifi"
  password: "pwd"
  # use static address to save dhcp time
  manual_ip:
    static_ip: 192.168.1.208
    gateway: 192.168.1.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Doorbell Fallback Hotspot"
    password: "password"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
# api:
#   password: "sparkle"

ota:
  - platform: esphome
    password: "sparkle"
  
web_server:
  port: 80
  
mqtt:
  broker: 192.168.1.1
  username: None
  password: None
#   on_message:
#   - topic: doorbell/ota_mode
#     payload: 'ON'
#     then:
#       - deep_sleep.prevent: dosleep


# deep_sleep:
#   id: dosleep
#   run_duration: 10s  

sensor:
  - platform: adc
    pin: VCC
    id: bat_voltage
    name: "Doorbell Battery"
    
